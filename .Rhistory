setwd(dir = "~/Desktop/Google Drive/SDSU/DA-Exam-2017/")
list.files(getwd())
# ggplot2 examples
library(readr)
library(dplyr)
options(dplyr.width = Inf)
library(ggplot2)
df <- read_csv(file = "df.csv")
glimpse(df)
## interesting fact: 1995 Mazda RX-7 doesn't have a conventional piston engine; It has two rotational things that act like a 6-cylinder engine.
sum(df$`Number of cylinders` == ".")
df[57, "Number of cylinders"] <- NA
## Chevy Corvette and Mazda RX-7 have NA for Rear seat room; no rear seats
df$`Rear seat room` <- as.numeric(df$`Rear seat room`)
df[is.na(df$`Rear seat room`),]
# create factors with value labels
df$Manufacturer <- as.factor(df$Manufacturer)
df$`Number of cylinders` <- factor(df$`Number of cylinders`, levels=c("3","4","5","6","8"),
labels=sapply(c("3","4","5","6","8"), function(x) paste(x, "cylinders")))
df$`Drive train type` <- factor(df$`Drive train type`, levels=c(0, 1, 2),
labels=c("rear wheel drive", "front wheel drive", "all wheel drive"))
df$`Manual transmission available` <- factor(df$`Manual transmission available`, levels=c(0, 1),
labels=c("No", "Yes"))
df$`Type` <- as.factor(df$Type)
df$`Air Bags standard` <- factor(df$`Air Bags standard`, levels=c(0, 1, 2),
labels=c("None","Driver only","Driver & passenger"))
df$Domestic <- factor(df$Domestic, levels = c(0, 1),
labels = c("non-US", "US"))
numericdata <- sapply(df, is.numeric)
#numericdata[c(4,5,6)] <- FALSE ## omitting Price as this may be our dependent var
numericdata[c(4,6, 7, 8)] <- FALSE ## omitting Minimum Price and Maximum Price, and city and hw mpg
## city mpg will be the dependent variable for future analysis!
df[, numericdata]
library(reshape2)
correlations <- cor(na.omit(df[,numericdata]), method = "spearman")
qplot(x=Var1, y=Var2, data=melt(correlations), fill=value, geom="tile",
xlab = "", ylab = "", main = "Correlation matrix of numeric data (spearman)") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
pcdata <- df[, numericdata]
correlations <- cor(pcdata, method = "spearman")
qplot(x=Var1, y=Var2, data=melt(correlations), fill=value, geom="tile",
xlab = "", ylab = "", main = "Correlation matrix of numeric data (spearman)") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
correlations <- cor(pcdata, method = "spearman")
qplot(x=Var1, y=Var2, data=melt(correlations), fill=value, geom="tile",
xlab = "", ylab = "", main = "Correlation matrix of numeric data (spearman)") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
pcdata <- na.omit(df[, numericdata]) ## drops two observations
correlations <- cor(pcdata, method = "spearman")
qplot(x=Var1, y=Var2, data=melt(correlations), fill=value, geom="tile",
xlab = "", ylab = "", main = "Correlation matrix of numeric data (spearman)") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
fit <- princomp(x = na.omit(df[,numericdata]), cor=TRUE)
df[is.na(df$`Rear seat room`),]
df[is.na(df$`Rear seat room`),] <- 0 ## setting rear seat room to zero
## since they do not have rear seats, the value should be 0 as no seat room at all!
df[is.na(df$`Rear seat room`),] <- 0 ## setting rear seat room to zero
## since they do not have rear seats, the value should be 0 as no seat room at all!
pcdata <- na.omit(df[, numericdata]) ## drops two observations
dim(pcdata)
correlations <- cor(pcdata, method = "spearman")
qplot(x=Var1, y=Var2, data=melt(correlations), fill=value, geom="tile",
xlab = "", ylab = "", main = "Correlation matrix of numeric data (spearman)") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
fit <- princomp(x = pcdata, cor=TRUE)
summary(fit) # print variance accounted for
loadings(fit) # pc loadings
plot(fit,type="lines", main = "scree plot") # scree plot
qplot(x = 1:15, y = fit$sdev^2, geom = c("line", "point"),
main = "scree plot", xlab = "components", ylab = "Variance")
qplot(x = 1:15, y = fit$sdev^2, geom = c("line", "point"),
main = "scree plot", xlab = "components", ylab = "Variance")
qplot(x = 1:15, y = fit$sdev^2 )
fit <- princomp(x = pcdata, cor=TRUE)
fit$sdev
loadings(fit) # 13 pc loadings
qplot(x = 1:13, y = fit$sdev^2, geom = c("line", "point"),
main = "scree plot", xlab = "components", ylab = "Variance")
princomp.summary
fit
class(fit)
summary(fit)
s = summary(fit)
s
str(s)
(fit$sdev^2) / cumsum(fit$sdev^2)
(fit$sdev^2) / sum(fit$sdev^2)
s
qplot(x = 1:13, y = (fit$sdev^2) / sum(fit$sdev^2), geom = c("line", "point"),
main = "scree plot", xlab = "components", ylab = "Proportion Variance Explained")
qplot(x = 1:13, y = (fit$sdev^2) / sum(fit$sdev^2), geom = c("line", "point"),
main = "scree plot (proportion of variance)", xlab = "components", ylab = "Proportion Variance Explained")
biplot(fit, choices = c(1,2))
library(mclust)
mfit <- Mclust(data = components)
components <- data.frame(fit$scores[,1:2])
rnames <- apply(na.omit(df)[, c("Manufacturer" , "Model")], 1, function(x) paste(x[1], x[2]))
rownames(components) <- rnames
components <- data.frame(fit$scores[,1:2])
rnames <- apply(pcdata[, c("Manufacturer" , "Model")], 1, function(x) paste(x[1], x[2]))
rnames <- apply(df[, c("Manufacturer" , "Model")], 1, function(x) paste(x[1], x[2]))
rownames(components) <- rnames
components <- data.frame(fit$scores[,1:2])
rnames <- apply(df[, c("Manufacturer" , "Model")], 1, function(x) paste(x[1], x[2]))
rownames(components) <- rnames
length(rnames)
dim(df)
rnames
